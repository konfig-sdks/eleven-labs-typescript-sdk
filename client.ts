/*
ElevenLabs API Documentation

This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  PronunciationDictionaryApi,
  AdminApi,
  AudioNativeApi,
  DubbingApi,
  ModelsApi,
  ProjectsApi,
  RedirectApi,
  SamplesApi,
  SpeechHistoryApi,
  SpeechToSpeechApi,
  TextToSpeechApi,
  UserApi,
  VoiceGenerationApi,
  VoicesApi,
  WorkspaceApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { ElevenLabsCustom } from "./client-custom";

export class ElevenLabs extends ElevenLabsCustom {
  readonly pronunciationDictionary: PronunciationDictionaryApi;
  readonly admin: AdminApi;
  readonly audioNative: AudioNativeApi;
  readonly dubbing: DubbingApi;
  readonly models: ModelsApi;
  readonly projects: ProjectsApi;
  readonly redirect: RedirectApi;
  readonly samples: SamplesApi;
  readonly speechHistory: SpeechHistoryApi;
  readonly speechToSpeech: SpeechToSpeechApi;
  readonly textToSpeech: TextToSpeechApi;
  readonly user: UserApi;
  readonly voiceGeneration: VoiceGenerationApi;
  readonly voices: VoicesApi;
  readonly workspace: WorkspaceApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.pronunciationDictionary = new PronunciationDictionaryApi(configuration);
    this.admin = new AdminApi(configuration);
    this.audioNative = new AudioNativeApi(configuration);
    this.dubbing = new DubbingApi(configuration);
    this.models = new ModelsApi(configuration);
    this.projects = new ProjectsApi(configuration);
    this.redirect = new RedirectApi(configuration);
    this.samples = new SamplesApi(configuration);
    this.speechHistory = new SpeechHistoryApi(configuration);
    this.speechToSpeech = new SpeechToSpeechApi(configuration);
    this.textToSpeech = new TextToSpeechApi(configuration);
    this.user = new UserApi(configuration);
    this.voiceGeneration = new VoiceGenerationApi(configuration);
    this.voices = new VoicesApi(configuration);
    this.workspace = new WorkspaceApi(configuration);
  }

}
